{
  "target_patent_id": "patent/KR102799500B1/en",
  "originality_score": 0.9863589928489874,
  "statistics": {
    "base_cpc_count": 35,
    "expanded_cpc_count": 94,
    "total_cpc_count": 129,
    "unique_cpc_count": 95,
    "citations_analyzed": 2,
    "patents_expanded": 10,
    "api_calls_saved": "~11 calls (vs original)"
  },
  "cpc_distribution": {
    "G06F9/4893": 1,
    "G06F9/4881": 3,
    "G06F9/4843": 1,
    "G06F1/3228": 1,
    "G06F1/329": 1,
    "G06F11/3017": 1,
    "G06F11/3428": 1,
    "G06F11/3433": 1,
    "G06F30/20": 1,
    "G06F9/3836": 1,
    "G06F9/5027": 3,
    "G06F9/5094": 2,
    "G06N20/00": 1,
    "G06N7/01": 1,
    "G06F11/0715": 1,
    "G06F11/0751": 1,
    "G06F11/0793": 1,
    "G06F2119/06": 1,
    "G06F2209/501": 2,
    "G06F2209/5018": 1,
    "G06F2209/508": 1,
    "G06F30/27": 1,
    "Y02D10/00": 1,
    "G06N3/10": 1,
    "G06N3/08": 1,
    "G06F17/16": 1,
    "G06F9/3889": 1,
    "G06F9/5066": 3,
    "G06N3/0442": 1,
    "G06N3/045": 1,
    "G06N3/0464": 1,
    "G06N3/09": 1,
    "G06N3/063": 1,
    "G06F9/5011": 3,
    "G06F9/44505": 1,
    "G06F9/45533": 2,
    "G06F9/5016": 1,
    "G06F3/0605": 1,
    "G06F3/0608": 1,
    "G06F3/0631": 1,
    "G06F3/0653": 1,
    "G06F3/067": 1,
    "G06F9/45558": 3,
    "G06F9/5044": 1,
    "G06F9/5077": 4,
    "G06F2009/45583": 3,
    "G06F3/0604": 1,
    "H04L47/783": 1,
    "G06F9/5083": 2,
    "H04L41/5006": 1,
    "H04L41/5009": 3,
    "H04L47/76": 2,
    "H04L47/83": 3,
    "G06F2209/5011": 2,
    "H04L67/10": 4,
    "G06F9/5005": 1,
    "G06F9/5061": 1,
    "H04L41/14": 1,
    "H04L41/147": 1,
    "H04L41/50": 1,
    "H04L43/55": 1,
    "H04L47/78": 2,
    "H04L67/1097": 3,
    "G06F9/5072": 2,
    "H04L41/5003": 1,
    "H04L67/322": 1,
    "H04L67/61": 1,
    "H04L47/125": 1,
    "H04L41/0843": 1,
    "H04L41/0806": 1,
    "H04L41/0895": 1,
    "H04L41/22": 1,
    "H04L41/40": 1,
    "H04L41/5019": 1,
    "H04L41/5048": 1,
    "G06F8/65": 1,
    "G06F9/4856": 1,
    "G06F9/5022": 1,
    "G06F9/505": 2,
    "G06F9/5088": 1,
    "G06F2009/45562": 1,
    "G06F2009/4557": 1,
    "G06F2209/5022": 2,
    "G06F2209/503": 1,
    "G06F9/50": 1,
    "H04L41/0896": 1,
    "H04L47/10": 1,
    "H04L47/24": 1,
    "H04L67/1001": 1,
    "H04L67/1002": 1,
    "H04L67/1095": 1,
    "H04L67/148": 1,
    "H04L67/42": 1,
    "G06F12/08": 1,
    "G06F2212/657": 1
  },
  "citation_patents": [
    {
      "title": "Methods, systems, articles of manufacture, and apparatus to optimize thread scheduling",
      "abstract": "An apparatus comprising: a model to generate adjusted tuning parameters of a thread scheduling policy based on a tradeoff indication value of a target system; and a workload monitor to: execute a workload based on the thread scheduling policy; obtain a performance score and a power score from the target system based on execution of the workload, the performance score and the power score corresponding to a tradeoff indication value; compare the tradeoff indication value to a criterion; and based on the comparison, initiate the model to re-adjust the adjusted tuning parameters.",
      "patent_id": null,
      "publication_number": "US20200133725A1",
      "publication_date": "2020-04-30",
      "filing_date": "2019-12-27",
      "priority_date": "2019-12-02",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/e5/fc/9a/f121247f7bf754/US20200133725A1.pdf"
    },
    {
      "title": "Scheduling method and related apparatus",
      "abstract": "Disclosed are a scheduling method and a related apparatus. A computing apparatus in a server can be chosen to implement a computation request, thereby improving the running efficiency of the server.",
      "patent_id": null,
      "publication_number": "US20200387800A1",
      "publication_date": "2020-12-10",
      "filing_date": "2018-08-02",
      "priority_date": "2017-12-28",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/33/6f/65/142e77f68fa82f/US20200387800A1.pdf"
    }
  ],
  "expanded_patents": [
    {
      "title": "Dynamic parallel distributed job configuration in a shared-resource environment",
      "abstract": "Dynamically adjusting the parameters of a parallel, distributed job in response to changes to the status of the job cluster. Includes beginning execution of a job in a cluster, receiving cluster status information, determining a job performance impact of the cluster status, reconfiguring job parameters based on the performance impact, and continuing execution of the job using the updated configuration. Dynamically requesting a change to the resources of the job cluster for a parallel, distributed job in response to changes in job status. Includes beginning execution of a job in a cluster, receiving job status information, determining a job performance impact, requesting a changed allocation of cluster resources based on the determined job performance impact, reconfiguring one or more job parameters based on the changed allocation, and continuing execution of the job using the updated configuration.",
      "patent_id": null,
      "publication_number": "US9405582B2",
      "publication_date": "2016-08-02",
      "filing_date": "2014-06-20",
      "priority_date": "2014-06-20",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/2b/52/3d/fd3ae6b65ebcd7/US9405582.pdf"
    },
    {
      "title": "Methods and apparatus to improve external resource allocation for hyper-converged infrastructures based on costs analysis",
      "abstract": "Methods, apparatus, and articles of manufacture are disclosed to improve resource allocation for virtualized server systems. An example apparatus includes a resource identifier to identify a set of external storage resources when a host storage solution is not identified, a storage cost calculator to calculate a cost corresponding to the external storage resource set by comparing a parameter of an external storage resource in the external storage resource set to a requirement, a cost analyzer to determine whether the cost satisfies a cost threshold by comparing the cost to a cost threshold, and a workload domain allocator to allocate the external storage resource set to the workload domain when the cost satisfies the cost threshold.",
      "patent_id": null,
      "publication_number": "US10891162B2",
      "publication_date": "2021-01-12",
      "filing_date": "2018-01-25",
      "priority_date": "2018-01-25",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/43/46/08/2590861074ffa7/US10891162.pdf"
    },
    {
      "title": "Reallocating resource capacity among resource pools in a cloud computing environment",
      "abstract": "In general, the embodiments of the present invention provide an approach for rebalancing/reallocating cloud resource capacities between resource pools that provide variable customer assurances and delivery penalties when assurances are not met. The variables that are considered hereunder include, overall ‘reservations’, total current capacity, remaining capacity against unused reservations and penalties that apply for failing to satisfy ‘reservation’ commitments. The approach uses a rate of capacity consumption to calculate the risk of consuming the available capacity in each resource pool (e.g., resource pools allocated to satisfy different levels of service with different SLA failure penalties). Based on the relative available capacity in each pool (as determined by the pool rate of consumption), resources are reallocated to maximize revenue (e.g., reduce financial penalty) across a resource pool set.",
      "patent_id": null,
      "publication_number": "US9860193B2",
      "publication_date": "2018-01-02",
      "filing_date": "2017-05-16",
      "priority_date": "2010-10-18",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/ba/70/17/6294ed20d788d4/US9860193.pdf"
    },
    {
      "title": "Systems and methods for provision of a guaranteed batch",
      "abstract": "Systems and methods for providing a guaranteed batch pool are described, including receiving a job request for execution on the pool of resources; determining an amount of time to be utilized for executing the job request based on available resources from the pool of resources and historical resource usage of the pool of resources; determining a resource allocation from the pool of resources, wherein the resource allocation spreads the job request over the amount of time; determining that the job request is capable of being executed for the amount of time; and executing the job request over the amount of time, according to the resource allocation.",
      "patent_id": null,
      "publication_number": "US12081454B2",
      "publication_date": "2024-09-03",
      "filing_date": "2023-02-07",
      "priority_date": "2017-08-15",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/47/3e/eb/036cb9d8618807/US12081454.pdf"
    },
    {
      "title": "Systems and methods for allocating one or more resources in a composite cloud environment",
      "abstract": "This technology relates to a device, method, and non-transitory computer readable medium for allocating one or more resources optimally in a composite cloud environment. This technology involves configuring organization and service level quota values, describing service composition, service unit, service level agreement, defining allocation model and resource allocation optimization algorithm. Based on these predefined rules the infrastructure, software and manual resources are assigned, future allocation is forecasted and resources are allocated to complete the service requests received from the users.",
      "patent_id": null,
      "publication_number": "US10574748B2",
      "publication_date": "2020-02-25",
      "filing_date": "2014-03-14",
      "priority_date": "2013-03-21",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/d1/cb/ec/2b6242ef04c38f/US10574748.pdf"
    },
    {
      "title": "Cloud bursting technologies",
      "abstract": "In some examples, a multi-cloud bursting service generates cloud agnostic burst templates for bursting workload environments on different clouds, each of the cloud agnostic burst templates defining a stack for a workload environment and tasks for provisioning cloud resources and deploying, on the cloud resources, the workload environment associated with the stack, the stack including applications, libraries, services, data, and/or an operating system. The multi-cloud bursting service can receive, from a local compute environment, a request to burst the workload environment onto a selected cloud and, based on a cloud agnostic burst template identified for the request, provision the cloud resources from the selected cloud and deploy the workload environment on the cloud resources from the selected cloud.",
      "patent_id": null,
      "publication_number": "US11134013B1",
      "publication_date": "2021-09-28",
      "filing_date": "2018-05-31",
      "priority_date": "2018-05-31",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/58/8b/f7/be7aef59a752bd/US11134013.pdf"
    },
    {
      "title": "Methods and apparatus to improve workload domain management in virtualized server systems using a free pool of virtualized servers",
      "abstract": "Methods, apparatus, systems, and articles of manufacture are disclosed to improve workload domain management of virtualized server systems. An example system includes memory, programmable circuitry, and instructions to program the programmable circuitry to generate a pool of virtualized servers based on a policy, determine whether a utilization of a first virtualized server is less than a first threshold, the first threshold based on at least one type of resource provisionable to the first virtualized server, determine that a firmware status associated with the first virtualized server corresponds to a first firmware version, transfer a workload of the first virtualized server to a second virtualized server after a determination that a second firmware version is available for the first virtualized server, deallocate the first virtualized server from the first workload domain to the pool of the virtualized servers, and update the first virtualized server to the second firmware version.",
      "patent_id": null,
      "publication_number": "US20230168946A1",
      "publication_date": "2023-06-01",
      "filing_date": "2023-01-25",
      "priority_date": "2018-04-20",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/01/b2/73/448d8709ee2877/US20230168946A1.pdf"
    },
    {
      "title": "Management of storage cluster performance with hybrid workloads",
      "abstract": "Embodiments relate to management of hybrid workloads in a shared pool of configurable computer resources. Resource utilization in the shared pool is dynamically tracked, and employed for assessing a set of servers a parallel access protocol should utilize for one or more I/O requests in conjunction with any serial workload optimizations. Accordingly, the load balancing embodies a diverse set of workloads to support dynamic and equitable allocation.",
      "patent_id": null,
      "publication_number": "US10243872B2",
      "publication_date": "2019-03-26",
      "filing_date": "2018-02-14",
      "priority_date": "2011-08-31",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/c5/c9/46/e80593b2be22c0/US10243872.pdf"
    },
    {
      "title": "Virtualization and dynamic resource allocation aware storage level reordering",
      "abstract": "A system and method for reordering storage levels in a virtualized environment includes identifying a virtual machine (VM) to be transitioned and determining a new storage level order for the VM. The new storage level order reduces a VM live state during a transition, and accounts for hierarchical shared storage memory and criteria imposed by an application to reduce recovery operations after dynamic resource allocation actions. The new storage level order recommendation is propagated to VMs. The new storage level order applied in the VMs. A different storage-level order is recommended after the transition.",
      "patent_id": null,
      "publication_number": "US9043790B2",
      "publication_date": "2015-05-26",
      "filing_date": "2013-08-09",
      "priority_date": "2010-05-11",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/2d/e8/db/fbde5ab0860fe3/US9043790.pdf"
    },
    {
      "title": "System and method for dynamically expanding virtual cluster and recording medium on which program for executing the method is recorded",
      "abstract": "Provided are a system and method for dynamically expanding a virtual cluster having one or more virtual machines (VMs), based on the resource availability of the virtual cluster and the type of the virtual cluster. The system for dynamically expanding a virtual cluster having one or more virtual machines (VMs), the system comprising a monitor unit which measures resource availability of a target virtual cluster and provides the resource availability to an expansion control unit, the expansion control unit which determines whether to expand the target virtual cluster based on the resource availability and determines a type and number of VM instances to be additionally allocated to the target virtual cluster by reflecting the resource availability and a type of the target virtual cluster and a virtual cluster configuration unit which modifies profile information of the target virtual cluster such that the determined number of VM instances of the determined type by the expansion control unit can be additionally allocated to the target virtual cluster.",
      "patent_id": null,
      "publication_number": "US9571561B2",
      "publication_date": "2017-02-14",
      "filing_date": "2013-12-27",
      "priority_date": "2012-12-28",
      "assignee": null,
      "inventor": null,
      "link": null,
      "pdf": "https://patentimages.storage.googleapis.com/ca/3f/f3/68baeee7a6fbff/US9571561.pdf"
    }
  ]
}